version: 2.1

orbs:
  node: circleci/node@5.0.1

workflows:
  version: 2

  test-build:
    jobs:
      - test-server:
          filters: &filters-every-push
            branches:
              only:
                - gergo/CIRewrite
      - lint:
          filters: *filters-every-push
      
      - get-version:
          filters: &filters-build
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              only:
                # - main
                - gergo/CIRewrite
          docker:
            - image: cimg:python
          steps:
            - checkout
            - run: ./.circleci/get_version.sh
            

      # - build-viewer:
      #     # built the npm package
      #     requires:
      #       - lint
      #     filters: &filters-build
      #       tags:
      #         only: /^[0-9]+\.[0-9]+\.[0-9]+$/
      #       branches:
      #         only:
      #           # - main
      #           - gergo/CIRewrite

  #         requires:
  #           # the result of objectloader build can be mounted here from workspace
  #           - npm_build_object_loader

      - docker-build-server:
          filters: *filters-build
          requires:
            - lint
            - get-version
            - test-server
              

  #     - docker_build_webhook_service:
  #         requires:
  #           - test
  #           - lint
  #     - docker-build-test-deployment:


  #     - docker_build_file_import_service:
  #         requires:
  #           - test
  #           - lint

  #     - docker_build_preview_service:
  #         requires:
  #           # viewer and obj_loader package mounted here from workspace
  #           - npm_build_viewer

  #     - docker_build_frontend:
  #         requires:
  #           # viewer and obj_loader package mounted here from workspace
  #           - npm_build_viewer

  # publish:
  #   jobs:
  #     - publish_npm:
  #         requires:
  #           - npm_build_object_loader
  #           - npm_build_viewer

  #     - publish_docker_hub:
  #         requires:
  #           - docker_build_server
  #           - docker_build_webhook_service
  #           - docker_build_file_import_service
  #           - docker_build_preview_service
  #           - docker_build_frontend

  #     - publish_helm_chart:
  #         requires:
  #           - publish_docker_hub

jobs:
  test-server:
    docker:
      - image: cimg/node:lts
      - image: cimg/redis:6.2.6
      - image: 'cimg/postgres:12.8'
        environment:
          POSTGRES_DB: speckle2_test
          POSTGRES_PASSWORD: speckle
          POSTGRES_USER: speckle
    environment:
      NODE_ENV: test
      DATABASE_URL: 'postgres://speckle:speckle@localhost:5432/speckle2_test'
      PGDATABASE: speckle2_test
      PGUSER: speckle
      SESSION_SECRET: 'keyboard cat'
      STRATEGY_LOCAL: 'true'
      CANONICAL_URL: 'http://localhost:3000'
    steps:
      - checkout
      - run: pwd
      - node/install-packages: &server-dir
          app-dir: ~/project/packages/server
      - run: 'dockerize -wait tcp://localhost:5432 -timeout 1m'

      - run:
          command: node --version
          # command: npm run test:report
          working_directory: 'packages/server'
      # - run:
      #     command: 'bash <(curl -s https://codecov.io/bash)'
      #     working_directory: 'packages/server'

      - store_test_results:
          path: packages/server/reports

      - store_artifacts:
          path: packages/server/coverage/lcov-report
          destination: package/server/coverage


  lint:
    docker: &docker-image
      - image: cimg/node:lts
    steps:
      - checkout
      - run: node --version

  build-viewer:
    docker: *docker-image
    steps:
      - checkout
      - run: 
          command: npm install ../objectloader
          working_directory: 'packages/viewer'
      - node/install-packages:
          app-dir: ~/project/packages/viewer
      - run: 
          command: npm run build
          working_directory: 'packages/viewer'
  
  docker-build-server:
    docker: *docker-image
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Server
          command: env SPECKLE_SERVER_PACKAGE=server ./.circleci/build.sh


  # publish_npm:
  #   context:
  #     - npm_registry

  # publish_docker_hub:
  #   context:
  #     - docker_hub

  # publish_helm_chart:
  #   context:
  #     - helm_repo
